{"ast":null,"code":"var _jsxFileName = \"/Users/stephanieyen/Projects/jewel-app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  // Object in the state\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles(); // const handleSubmit = () = {\n  // }\n  // const clear = () => {\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        label: \"Creator\",\n        value: postData.creator,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        label: \"Title\",\n        value: postData.title,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        label: \"Message\",\n        value: postData.message,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        label: \"Tags\",\n        value: postData.tags,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"container\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"RdtQ3I0GrCbXdwM6RlG1Gh0R1pI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/stephanieyen/Projects/jewel-app/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useStyles","Form","postData","setPostData","creator","title","message","tags","selectedFile","classes","paper","root","form","handleSubmit","e","target","value","fileInput","base64","buttonSubmit","clear"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\n\nconst Form = () => {\n    // Object in the state\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    const classes = useStyles();\n\n    // const handleSubmit = () = {\n\n    // }\n\n    // const clear = () => {\n\n    // }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a Memory</Typography>\n\n                {/* For each form field, set the state using an object by spreading postData */}\n                <TextField name=\"creator\" label=\"Creator\" value={postData.creator} variant=\"outlined\" fullWidth \n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                <TextField name=\"title\" label=\"Title\" value={postData.title} variant=\"outlined\" fullWidth \n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" label=\"Message\" value={postData.message} variant=\"outlined\" fullWidth \n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                <TextField name=\"tags\" label=\"Tags\" value={postData.tags} variant=\"outlined\" fullWidth \n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value })} />\n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })} />\n                </div>\n\n                {/* Submit and Clear */}\n                <Button className={classes.buttonSubmit} variant=\"container\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}